# Generated by Django 4.2 on 2023-05-07 08:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, unique=True)),
                ('profile_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=-1, scale=None, size=[1920, 1080], upload_to='')),
                ('about', models.CharField(blank=True, max_length=300, null=True)),
                ('website_official', models.URLField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(max_length=500, null=True)),
                ('likes', models.PositiveBigIntegerField(default=0)),
                ('dislikes', models.PositiveBigIntegerField(default=0)),
                ('commmented_on', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tube.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, null=True)),
                ('video', models.FileField(null=True, upload_to='')),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format='WEBP', keep_meta=True, null=True, quality=75, scale=None, size=[1920, 1080], upload_to='')),
                ('description', models.TextField(blank=True, max_length=10000, null=True)),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('private', models.BooleanField(default=False)),
                ('unlisted', models.BooleanField(default=False)),
                ('likes', models.PositiveBigIntegerField(default=0)),
                ('dislikes', models.PositiveBigIntegerField(default=0)),
                ('views', models.PositiveBigIntegerField(default=0)),
                ('path', models.URLField(blank=True, max_length=150, null=True, unique=True)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tube.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Viewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=100, null=True, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None)),
                ('gender', models.CharField(choices=[('select', 'SELECT'), ('male', 'MALE'), ('female', 'FEMALE'), ('OTHER', 'OTHER'), ('prefer not to say', 'PREFER NOT TO SAY')], max_length=30, null=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('videos', models.ManyToManyField(blank=True, related_name='watch_later', to='tube.video')),
                ('viewer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='tube.viewer')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Playlist', max_length=150)),
                ('views', models.PositiveBigIntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.channel')),
                ('videos', models.ManyToManyField(blank=True, related_name='playlists', to='tube.video')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.TextField(max_length=500, null=True)),
                ('likes', models.PositiveBigIntegerField(default=0)),
                ('dislikes', models.PositiveBigIntegerField(default=0)),
                ('replied_on', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tube.channel')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='video',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tube.video'),
        ),
        migrations.AddField(
            model_name='channel',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='Subscribed_viewers', to='tube.viewer'),
        ),
        migrations.AddField(
            model_name='channel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.viewer'),
        ),
    ]
